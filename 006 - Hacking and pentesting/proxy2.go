package main

import (
	"fmt"
	"io"
	"io/ioutil"
	"log"
	"net/http"
)

func main() {
	const port = "4200"

	// HTTPS GET request from app "NRK" (Norwegian news)
	const address1 = "https://www.nrk.no/vestland/skalabu-stengt-pa-ubestemt-tid-_-gjekk-ikkje-a-fryse-i-hel-veggedyra-1.15495965?header=off&viewContext=no.nrk.mobil.app&bridgeVersion=1.0.0"

	// HTTP GET request from app "BRU Airport Info" (Brussels Airport arrivals and departure flights info)
	// Not HTTPS. It's here for test purposes.
	//const address2 = "http://www.webport.com/rpc/v2/timetable.php?lang=en&v=29&d=p&iata=BRU&type=departure"

	// HTTPS GET request from weather app.
	// Used for Proxy1 exercise. It's here for test purposes.
	//const address3 = "https://api.weather.com/v2/aggcommon/v3-location-point;v3alertsHeadlines;v3-wx-observations-current;v2fcstdaily7s;v2fcsthourly24;v2idxPollenDaypart3;v2idxRunHourly24;v2idxDriveCurrent;v3-links?units=m&par=samsung_widget&geocode=46.197%2C6.144&language=en-us&apiKey=793db2b6128c4bc2bdb2b6128c0bc230&format=json"


	fmt.Println("Getting data from website...")

	// GET request on address found through Burp Suite
	resp, err := http.Get(address1)
  if err != nil {
      log.Fatal(err)
  }

	fmt.Println("Data received. Formatting...")
	// reading content of the response
	defer resp.Body.Close()
  body, err := ioutil.ReadAll(resp.Body)
  if err != nil {
      log.Fatal(err)
  }

	fmt.Println("Formatting terminated. Sending data to server...")
	// sending response content to our web server
	handler := func(w http.ResponseWriter, req *http.Request) {
		io.WriteString(w, string(body))
	}
	http.HandleFunc("/", handler)

	fmt.Println("Completed.\nStarting web server at address: localhost:"+port)
	log.Fatal(http.ListenAndServe(":"+port, nil))
}
